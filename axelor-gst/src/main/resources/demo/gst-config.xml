<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_5.1.xsd">

    <input file="gst_state.csv" separator="," type="com.axelor.apps.gst.db.State"
        search="self.importId = :importId" />
    <input file="gst_city.csv" separator="," type="com.axelor.apps.base.db.City"
        search="self.importId = :importId" />
    <input file="gst_address.csv" separator="," type="com.axelor.apps.base.db.Address"
        search="self.importId = :importId" call="com.axelor.csv.script.ImportAddress:importAddress">
        <bind to="city" search="concat(self.zip,' ',self.name) = :addressL6" update="true" if="!city"/>
    </input>


    <input file="gst_productCategory.csv" separator=","
        type="com.axelor.apps.base.db.ProductCategory" search="self.code = :code">
    </input>

    <input file="gst_product.csv" separator="," type="com.axelor.apps.base.db.Product"
        search="self.importId = :importId" call="com.axelor.csv.script.ImportProduct:importProduct">
        <bind to="startDate"
            eval="call:com.axelor.csv.script.ImportDateTime:importDate(startDate)"
            column="startDate" />
        <bind to="createdOn"
            eval="call:com.axelor.csv.script.ImportDateTime:importDate(startDate)"
            column="startDate" />
        <bind to="netMass" eval="1" if="productTypeSelect == 'storable'" />
        <bind to="grossMass" eval="1" if="productTypeSelect == 'storable'" />
        <bind to="massUnit" search="self.labelToPrinting = 'kg'"
            if="productTypeSelect == 'storable'" />
    </input>

    <input file="gst_partner.csv" separator="," type="com.axelor.apps.base.db.Partner" search="self.importId = :importId" call="com.axelor.csv.script.ImportPartner:importPartner">
        <bind to="partnerSeq" eval="call:com.axelor.apps.base.service.administration.SequenceService:getSequenceNumber(com.axelor.apps.base.db.repo.SequenceRepository.PARTNER)" />
        <bind to="emailAddress" search="self.address = :email">
            <bind to="address" column="email" />
        </bind>
        <bind to="partnerAddressList" search="self.address.importId = :address" if="address != null &amp;&amp; isContact == 'false'">
            <bind to="address" search="self.importId = :address" update="true" />
            <bind to="isInvoicingAddr" eval="true" />
            <bind to="isDeliveryAddr" eval="true" />
            <bind to="isDefaultAddr" eval="true" />
        </bind>
        <bind to="mainAddress" search="self.importId = :address" if="address != null &amp;&amp; isContact == 'true'" update="true" />
        <bind to="inPaymentMode" column="inPaymentMode.importId" if="false"/>
        <bind to="outPaymentMode" column="outPaymentMode.importId" if="false"/>
        <bind to="paymentCondition" column="paymentCondition.importId" if="false"/>
        <bind to="language" search="self.code = :languageCode"/>
    </input>
    
    <input file="gst_partner.csv" separator="," search="self.importId = :importId" update="true" type="com.axelor.apps.base.db.Partner">
        <bind column="companySet_importId" to="companySet" search="self.importId in :companySet_importId" eval="companySet_importId.split('\\|') as List" update="true"/>
        <bind to="mainPartner" search="self.importId = :mainPartner_importId" update="true" />
        <bind to="mainPartner" search="self.importId = :mainPartner_importId" update="true" if="mainPartner_importId"/>
        <bind to="inPaymentMode" column="inPaymentMode.importId" if="false"/>
        <bind to="outPaymentMode" column="outPaymentMode.importId" if="false"/>
        <bind to="paymentCondition" column="paymentCondition.importId" if="false"/>
    </input>
    
    <input file="gst_partner.csv" separator="," search="self.importId = :importId" update="true" type="com.axelor.apps.base.db.Partner"
        call="com.axelor.csv.script.ImportPartner:updateContacts">
        <bind column="importId" to="importId"/>
    </input>
</csv-inputs>

    